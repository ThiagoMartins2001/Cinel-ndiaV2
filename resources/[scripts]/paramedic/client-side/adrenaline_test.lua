-----------------------------------------------------------------------------------------------------------------------------------------
-- TESTE DO SISTEMA DE ADRENALINA
-----------------------------------------------------------------------------------------------------------------------------------------

-- Comando para testar se o sistema est√° funcionando
RegisterCommand("testadrenaline", function()
    print("=== TESTE DO SISTEMA DE ADRENALINA ===")
    
    -- Teste 1: Verificar se os arquivos est√£o carregados
    if exports["paramedic"]:IsInAdrenalineLocation then
        print("‚úÖ Fun√ß√£o IsInAdrenalineLocation carregada")
    else
        print("‚ùå Fun√ß√£o IsInAdrenalineLocation n√£o encontrada")
    end
    
    if exports["paramedic"]:GetAdrenalineConfig then
        print("‚úÖ Fun√ß√£o GetAdrenalineConfig carregada")
    else
        print("‚ùå Fun√ß√£o GetAdrenalineConfig n√£o encontrada")
    end
    
    if exports["paramedic"]:GetAdrenalineLocations then
        print("‚úÖ Fun√ß√£o GetAdrenalineLocations carregada")
    else
        print("‚ùå Fun√ß√£o GetAdrenalineLocations n√£o encontrada")
    end
    
    -- Teste 2: Verificar configura√ß√£o
    local config = exports["paramedic"]:GetAdrenalineConfig()
    if config then
        print("‚úÖ Configura√ß√£o carregada:")
        print("   - Tempo de aplica√ß√£o: " .. config.ApplicationTime .. "ms")
        print("   - Vida ap√≥s reanima√ß√£o: " .. config.ReviveHealth)
        print("   - Dist√¢ncia m√°xima: " .. config.MaxDistance .. "m")
    else
        print("‚ùå Configura√ß√£o n√£o encontrada")
    end
    
    -- Teste 3: Verificar locais
    local locations = exports["paramedic"]:GetAdrenalineLocations()
    if locations then
        print("‚úÖ " .. #locations .. " locais configurados:")
        for i, location in ipairs(locations) do
            print("   " .. i .. ". " .. location.Name .. " (Raio: " .. location.Radius .. "m)")
            print("      Coordenadas: " .. location.Coords.x .. ", " .. location.Coords.y .. ", " .. location.Coords.z)
        end
    else
        print("‚ùå Locais n√£o encontrados")
    end
    
    -- Teste 4: Verificar posi√ß√£o atual
    local playerCoords = GetEntityCoords(PlayerPedId())
    local isInLocation, locationName = exports["paramedic"]:IsInAdrenalineLocation(playerCoords)
    
    print("üìç Sua posi√ß√£o atual: " .. playerCoords.x .. ", " .. playerCoords.y .. ", " .. playerCoords.z)
    
    if isInLocation then
        print("‚úÖ Voc√™ est√° em local permitido: " .. locationName)
    else
        print("‚ùå Voc√™ N√ÉO est√° em local permitido")
    end
    
    print("=== FIM DO TESTE ===")
end, false)

-- Comando para debug detalhado
RegisterCommand("debugadrenaline", function()
    print("=== DEBUG DETALHADO ADRENALINA ===")
    
    local playerCoords = GetEntityCoords(PlayerPedId())
    print("üìç Sua posi√ß√£o: " .. playerCoords.x .. ", " .. playerCoords.y .. ", " .. playerCoords.z)
    
    -- Testar manualmente a verifica√ß√£o
    local locations = exports["paramedic"]:GetAdrenalineLocations()
    if locations then
        for i, location in ipairs(locations) do
            local distance = #(playerCoords - location.Coords)
            print("üìè Dist√¢ncia at√© " .. location.Name .. ": " .. distance .. "m")
            print("   Coordenadas do local: " .. location.Coords.x .. ", " .. location.Coords.y .. ", " .. location.Coords.z)
            print("   Raio permitido: " .. location.Radius .. "m")
            
            if distance <= location.Radius then
                print("   ‚úÖ DENTRO DO RAIO PERMITIDO")
            else
                print("   ‚ùå FORA DO RAIO PERMITIDO")
            end
        end
    end
    
    print("=== FIM DO DEBUG ===")
end, false)

-- Comando para simular uso de adrenalina (apenas para teste)
RegisterCommand("simulateadrenaline", function()
    local playerCoords = GetEntityCoords(PlayerPedId())
    local isInLocation, locationName = exports["paramedic"]:IsInAdrenalineLocation(playerCoords)
    
    if isInLocation then
        print("üéØ Simulando uso de adrenalina em: " .. locationName)
        
        -- Simular anima√ß√£o
        local config = exports["paramedic"]:GetAdrenalineConfig()
        TriggerEvent("Progress", "Aplicando Adrenalina (SIMULA√á√ÉO)", 3000)
        
        -- Simular notifica√ß√£o
        SetTimeout(3000, function()
            TriggerEvent("Notify", "verde", "Adrenalina aplicada com sucesso em " .. locationName .. "! (SIMULA√á√ÉO)", 5000)
        end)
    else
        print("‚ùå N√£o √© poss√≠vel simular uso fora de local permitido")
        TriggerEvent("Notify", "vermelho", "Voc√™ s√≥ pode usar adrenalina em locais m√©dicos autorizados! (SIMULA√á√ÉO)", 5000)
    end
end, false)

-- Comando para mostrar informa√ß√µes detalhadas
RegisterCommand("adrenalineinfo", function()
    print("=== INFORMA√á√ïES DO SISTEMA DE ADRENALINA ===")
    
    local config = exports["paramedic"]:GetAdrenalineConfig()
    local locations = exports["paramedic"]:GetAdrenalineLocations()
    
    print("üìã CONFIGURA√á√ÉO:")
    print("   Tempo de aplica√ß√£o: " .. config.ApplicationTime .. "ms")
    print("   Vida ap√≥s reanima√ß√£o: " .. config.ReviveHealth)
    print("   Pontos de sede/fome: " .. config.ThirstPoints .. "/" .. config.HungerPoints)
    print("   Dist√¢ncia m√°xima: " .. config.MaxDistance .. "m")
    print("   Verificar param√©dicos: " .. tostring(config.Security.CheckParamedics))
    print("   Logs habilitados: " .. tostring(config.Security.EnableLogs))
    
    print("\nüè• LOCAIS AUTORIZADOS:")
    for i, location in ipairs(locations) do
        print("   " .. i .. ". " .. location.Name)
        print("      Coordenadas: " .. location.Coords.x .. ", " .. location.Coords.y .. ", " .. location.Coords.z)
        print("      Raio: " .. location.Radius .. "m")
    end
    
    print("\nüí° COMO USAR:")
    print("   1. V√° at√© um local autorizado")
    print("   2. Tenha o item 'Adrenalina' no invent√°rio")
    print("   3. Clique no item pr√≥ximo a uma pessoa desacordada")
    print("   4. Aguarde 8 segundos para a aplica√ß√£o")
    
    print("\nüîß COMANDOS DISPON√çVEIS:")
    print("   /testadrenalinelocation - Testa se est√° em local permitido")
    print("   /testadrenaline - Testa o sistema completo")
    print("   /simulateadrenaline - Simula uso de adrenalina")
    print("   /adrenalineinfo - Mostra estas informa√ß√µes")
    
    print("=== FIM DAS INFORMA√á√ïES ===")
end, false)
